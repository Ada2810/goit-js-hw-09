{"mappings":"AAAA,IAAMA,YAAcC,SAASC,cAAc,gBACrCC,SAAWF,SAASC,cAAc,eAClCE,UAAYH,SAASC,cAAc,gBACnCG,YAAcJ,SAASC,cAAc,kBACrCI,YAAcL,SAASC,cAAc,kBAEvCK,aAAe,KACfC,kBAAoB,KAwBxB,SAASC,kBACP,IAAMC,EAAM,IAAIC,KACVC,EAAgBL,aAAeG,EAErC,GAAIE,GAAiB,EAGnB,OAFAC,cAAcL,wBACdM,cAAc,EAAG,EAAG,EAAG,GAIzB,IAA0CC,EAAAC,UAAUJ,GACpDE,cAD0CC,EAAlCE,KAAkCF,EAA5BG,MAA4BH,EAArBI,QAAqBJ,EAAZK,Q,CAIhC,SAASJ,UAAUK,GACjB,IAAMC,EAAM,MACNC,EAAO,KASb,MAAO,CAAEN,KALIO,KAAKC,MAAMJ,EAAKC,GAKdJ,MAJDM,KAAKC,MAAMJ,EAAMC,EAAOC,GAIhBJ,QAHNK,KAAKC,MAAMJ,EAAME,EALlB,KAQgBH,QAFfI,KAAKC,MAAMJ,EANZ,IACA,K,CAWjB,SAASP,cAAcG,EAAMC,EAAOC,EAASC,GAC3CjB,SAASuB,YAAcC,OAAOV,GAAMW,SAAS,EAAG,KAChDxB,UAAUsB,YAAcC,OAAOT,GAAOU,SAAS,EAAG,KAClDvB,YAAYqB,YAAcC,OAAOR,GAASS,SAAS,EAAG,KACtDtB,YAAYoB,YAAcC,OAAOP,GAASQ,SAAS,EAAG,I,CAvDxDC,UAAU,mBAAoB,CAC5BC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIrB,KACjBsB,gBAAiB,EACjBC,QAAA,SAAQC,IACN5B,aAAe4B,EAAc,KAET,IAAIxB,MACtByB,MAAM,sCACNpC,YAAYqC,UAAW,GAEvBrC,YAAYqC,UAAW,C,IAK7BrC,YAAYsC,iBAAiB,SAAS,WACpCtC,YAAYqC,UAAW,EACvB7B,kBAAoB+B,YAAY9B,gBAAiB,I","sources":["src/js/02-timer.js"],"sourcesContent":["const startButton = document.querySelector('[data-start]');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nlet selectedDate = null;\nlet countdownInterval = null;\n\nflatpickr(\"#datetime-picker\", {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedDate = selectedDates[0];\n    // Verificăm dacă data selectată este în viitor\n    if (selectedDate <= new Date()) {\n      alert(\"Please choose a date in the future\");\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n});\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  countdownInterval = setInterval(updateCountdown, 1000);\n});\n\nfunction updateCountdown() {\n  const now = new Date();\n  const timeRemaining = selectedDate - now;\n\n  if (timeRemaining <= 0) {\n    clearInterval(countdownInterval);\n    updateDisplay(0, 0, 0, 0);\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n  updateDisplay(days, hours, minutes, seconds);\n}\n\nfunction convertMs(ms) {\n  const day = 1000 * 60 * 60 * 24;\n  const hour = 1000 * 60 * 60;\n  const minute = 1000 * 60;\n  const second = 1000;\n  \n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n  \n  return { days, hours, minutes, seconds };\n}\n\n// Funcția de actualizare a afișajului\nfunction updateDisplay(days, hours, minutes, seconds) {\n  daysSpan.textContent = String(days).padStart(2, '0');\n  hoursSpan.textContent = String(hours).padStart(2, '0');\n  minutesSpan.textContent = String(minutes).padStart(2, '0');\n  secondsSpan.textContent = String(seconds).padStart(2, '0');\n}\n"],"names":["startButton","document","querySelector","daysSpan","hoursSpan","minutesSpan","secondsSpan","selectedDate","countdownInterval","updateCountdown","now","Date","timeRemaining","clearInterval","updateDisplay","ref","convertMs","days","hours","minutes","seconds","ms","day","hour","Math","floor","textContent","String","padStart","flatpickr","enableTime","time_24hr","defaultDate","minuteIncrement","onClose","selectedDates","alert","disabled","addEventListener","setInterval"],"version":3,"file":"02-timer.fafbc0d9.js.map"}